{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "kubernetes-pipeline-example",
		"language": "JAVA_MAVEN",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"publish_attributes": {
					"docker_images": [
						{
							"repository": "mobile-deposit-api",
							"tags": [
								"((application.version))"
							],
							"context": "."
						}
					]
				},
				"exit_actions": {},
				"properties": [
					{
						"name": "gradle.user.home",
						"value": "${SEGMENT_BASE_DIR}/cache/.gradle",
						"description": "GRADLE_USER_HOME is set to ${SEGMENT_BASE_DIR}/cache/.gradle by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"type": "string"
					},
					{
						"name": "ivy.defaultCacheDir",
						"value": "${SEGMENT_BASE_DIR}/cache/.ivy",
						"description": "ivy cache directory is set to ${SEGMENT_BASE_DIR}/cache/.ivy by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"type": "string"
					},
					{
						"name": "maven.repo.local",
						"value": "${SEGMENT_BASE_DIR}/cache/.m2",
						"description": "maven local repository is set to ${SEGMENT_BASE_DIR}/cache/.m2 by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"type": "string"
					},
					{
						"name": "AWS_ACCESS_KEY_ID",
						"value": "((arch.aws.key))",
						"type": "string"
					},
					{
						"name": "AWS_SECRET_ACCESS_KEY",
						"value": "((arch.aws.secret))",
						"type": "string"
					},
					{
						"name": "AWS_DEFAULT_REGION",
						"value": "us-east-1",
						"type": "string"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"packages": [
					{
						"name": "((application.name))",
						"downloads": [],
						"files": [
							"mobile-deposit-api-*"
						]
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"cache_info": {
					"paths": [
						"((gradle.user.home))",
						"((ivy.defaultCacheDir))",
						"((maven.repo.local))"
					]
				},
				"tasks": [
					{
						"name": "BuildWithMaven",
						"steps": [
							{
								"name": "verify",
								"definition": "verify",
								"command": "mvn verify",
								"properties": null
							},
							{
								"name": "copy-jar",
								"definition": "Copy final JAR to expected location",
								"command": "cp -f target/*.jar .",
								"properties": null
							},
							{
								"name": "copy-test-reports",
								"definition": "copy-test-reports",
								"command": "cp target/surefire-reports/TEST-com.cloudbees.example.mobile.deposit.api.DepositEndpointTests.xml ./test.xml\ncp target/site/jacoco/jacoco.xml ./coverage.xml",
								"properties": null
							},
							{
								"name": "dockerBuild",
								"definition": "dockerBuild",
								"command": "apt-get -y -qq install awscli jq;\nenv; \naws sts assume-role --role-arn 'arn:aws:iam::189768267137:role/GuideRailsRole' --role-session-name Arch-GR-Session \u003e temp.txt;\nexport AWS_ACCESS_KEY_ID=`cat temp.yxy | jq '.Credentials' | jq '.AccessKeyId' -r`;\nexport AWS_SECRET_ACCESS_KEY=`cat temp.txt | jq '.Credentials' | jq '.SecretAccessKey' -r`;\nexport AWS_SESSION_TOKEN=`cat temp.txt | jq '.Credentials' | jq '.SessionToken' -r`;\nrm temp.txt;\naws ecr get-login-password | docker login --username AWS --password-stdin 189768267137.dkr.ecr.us-east-1.amazonaws.com;",
								"properties": null
							}
						],
						"docker_options": {}
					}
				]
			}
		],
		"exit_actions": {
			"default": {
				"code_analysis": {
					"publish": true,
					"properties": null
				}
			}
		},
		"default_properties": [],
		"deployment_files": [],
		"application_init": {}
	},
	"organization": {
		"orgname": "CloudBees"
	}
}